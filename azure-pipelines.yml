# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
- name: terraformAction
  displayName: Terraform Action
  type: string
  default: apply
  values:
  - apply
  - destroy

trigger:
  none

pool:
  vmImage: ubuntu-latest

steps:
#- task: TerraformInstaller@1
#  inputs:
#    terraformVersion: 'latest'

#- task: TerraformTaskV4@4
#  inputs:
#    provider: 'azurerm'
#    command: 'init'
#    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
#    backendServiceArm: 'Pay-As-You-Go(8108a794-bc72-4561-9922-8c497443200d)'
#    backendAzureRmResourceGroupName: 'terraform'
#    backendAzureRmStorageAccountName: 't3rraf0rm'
#    backendAzureRmContainerName: 'terraform'
#    backendAzureRmKey: '$(terraformStorageKey)'

#- task: TerraformTaskV4@4
#  inputs:
#    provider: 'azurerm'
#    command: '${{ parameters.terraformAction }}'
#    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
#    environmentServiceNameAzureRM: 'Pay-As-You-Go(8108a794-bc72-4561-9922-8c497443200d)'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Get-ChildItem -Path $(System.DefaultWorkingDirectory)/scripts.v3/'

- task: AzureCLI@2
  displayName: Export Content
  inputs:
    azureSubscription: 'Pay-As-You-Go(8108a794-bc72-4561-9922-8c497443200d)'
    scriptType: 'batch'
    scriptLocation: 'inlineScript'
    inlineScript: |
      node ./exportcontent ^
      --sourceSubscriptionId "8108a794-bc72-4561-9922-8c497443200d" ^
      --sourceResourceGroupName "api-management-rg" ^
      --sourceServiceName "apim-2guxyrz57b67j"
    workingDirectory: '$(System.DefaultWorkingDirectory)/scripts.v3/'
