# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
- name: terraformAction
  displayName: Terraform Action
  type: string
  default: none
  values:
  - none
  - apply
  - destroy
- name: apiCustomisationAction
  displayName: API Customisation Action
  type: string
  default: apply
  values:
  - none
  - import
  - export

trigger:
  none

pool:
  vmImage: windows-latest

steps:
- task: TerraformInstaller@1
  condition: and(succeeded(), ne('${{ parameters.terraformAction }}', 'none'))
  inputs:
    terraformVersion: 'latest'
  

- task: TerraformTaskV4@4
  condition: and(succeeded(), ne('${{ parameters.terraformAction }}', 'none'))
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    backendServiceArm: 'Pay-As-You-Go(8108a794-bc72-4561-9922-8c497443200d)'
    backendAzureRmResourceGroupName: 'terraform'
    backendAzureRmStorageAccountName: 't3rraf0rm'
    backendAzureRmContainerName: 'terraform'
    backendAzureRmKey: '$(terraformStorageKey)'

- task: TerraformTaskV4@4
  condition: and(succeeded(), ne('${{ parameters.terraformAction }}', 'none'))
  inputs:
    provider: 'azurerm'
    command: '${{ parameters.terraformAction }}'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    environmentServiceNameAzureRM: 'Pay-As-You-Go(8108a794-bc72-4561-9922-8c497443200d)'

- task: Npm@1
  condition: and(succeeded(), ne('${{ parameters.apiCustomisationAction }}', 'none'))
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)'

- task: AzureCLI@2
  condition: and(succeeded(), eq('${{ parameters.apiCustomisationAction }}', 'export'))
  displayName: Export Content
  inputs:
    azureSubscription: 'Pay-As-You-Go(8108a794-bc72-4561-9922-8c497443200d)'
    scriptType: 'batch'
    scriptLocation: 'inlineScript'
    inlineScript: |
      node ./exportcontent ^
      --sourceSubscriptionId "8108a794-bc72-4561-9922-8c497443200d" ^
      --sourceResourceGroupName "api-management-rg" ^
      --sourceServiceName "apim-2guxyrz57b67j"
    workingDirectory: '$(System.DefaultWorkingDirectory)/scripts.v3/'

- task: AzureCLI@2
  condition: and(succeeded(), eq('${{ parameters.apiCustomisationAction }}', 'import'))
  displayName: Import Content
  inputs:
    azureSubscription: 'Pay-As-You-Go(8108a794-bc72-4561-9922-8c497443200d)'
    scriptType: 'batch'
    scriptLocation: 'inlineScript'
    inlineScript: |
      node ./importcontent ^
      --destSubscriptionId "8108a794-bc72-4561-9922-8c497443200d" ^
      --destResourceGroupName "api-management-rg" ^
      --destServiceName "apim-2guxyrz57b67j"
    workingDirectory: '$(System.DefaultWorkingDirectory)/scripts.v3/'

- task: CopyFiles@2
  condition: and(succeeded(), eq('${{ parameters.apiCustomisationAction }}', 'export'))
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/dist/snapshot'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  condition: and(succeeded(), eq('${{ parameters.apiCustomisationAction }}', 'export'))
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'DeveloperPortalSnapshot'
    publishLocation: 'Container'